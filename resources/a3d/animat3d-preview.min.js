/*!
  Script: animat3d-preview.js
    Proprietary 3D Web Engine based on Three.JS

  About: Owner
    Copyright (c) 2022, Valky Fischer
    VALKYTEQ - All rights reserved

  About: License
    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are met:

        * Redistributions of source code must retain the above copyright notice,
          this list of conditions and the following disclaimer.
        * Redistributions in binary form must reproduce the above copyright
          notice, this list of conditions and the following disclaimer in the
          documentation and/or other materials provided with the distribution.

  About: Notice
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
    ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
    POSSIBILITY OF SUCH DAMAGE.
*/
import*as THREE from"./animat3d_modules/build/three.module.js";import{GLTFLoader}from"./animat3d_modules/loaders/GLTFLoader.js";import Stats from"./animat3d_modules/libs/stats.module.js";import{GUI}from"./animat3d_modules/libs/lil-gui.module.min.js";import{Water}from"./animat3d_modules/objects/Water2.js";let scene,renderer,camera,stats,stats1,stats2,stats3,model,skeleton,mixer,clock,water,world,gizmo,helper;console.log("Animat3D Version       : public@^0.9.0c");const crossFadeControls=[];let idleAction,walkAction,runAction,angryAction,fearAction,greetAction,laughAction,sadAction,shyAction,talkAction,proposeAction,danceAction,idleWeight,walkWeight,runWeight,angryWeight,fearWeight,greetWeight,laughWeight,sadWeight,shyWeight,talkWeight,proposeWeight,danceWeight,actions,settings,singleStepMode=!1,sizeOfNextStep=0,degree=Math.PI/180;function init(e){const t=document.getElementById("container");(camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,1e4)).position.set(e.camera.position[0],e.camera.position[1],e.camera.position[2]),camera.rotation.set(e.camera.rotation[0]*degree,e.camera.rotation[1]*degree,e.camera.rotation[2]*degree),clock=new THREE.Clock,scene=new THREE.Scene;const i=new THREE.PlaneGeometry(300,400);(water=new Water(i,{color:settings["water color"],scale:settings["water scale"],flowDirection:new THREE.Vector2(settings["water flowX"],settings["water flowY"]),textureWidth:1024,textureHeight:1024})).position.x=0,water.position.y=-3,water.position.z=100,water.rotation.x=-.5*Math.PI,scene.add(water),(new THREE.TextureLoader).load("animat3d_textures/sky/night.png",function(e){scene.background=e});const o=new THREE.AmbientLight(12106748,.1);scene.add(o);const n=new THREE.DirectionalLight(12106748,.75);n.position.set(-0,100,-100),n.castShadow=!0,n.shadow.camera.top=400,n.shadow.camera.bottom=-400,n.shadow.camera.left=-167,n.shadow.camera.right=233,n.shadow.camera.near=.001,n.shadow.camera.far=400,n.shadow.bias=-.0065,scene.add(n);const s=new GLTFLoader;s.load("./animat3d_objects/chars/kara.a3d",function(e){model=e.scene,scene.add(model),model.traverse(function(e){e.isMesh&&(e.castShadow=!0)}),model.position.x=-33,model.rotation.y=22*degree,(skeleton=new THREE.SkeletonHelper(model)).visible=!1,scene.add(skeleton),createPanel();const t=e.animations;mixer=new THREE.AnimationMixer(model),angryAction=mixer.clipAction(t[0]),fearAction=mixer.clipAction(t[1]),greetAction=mixer.clipAction(t[2]),laughAction=mixer.clipAction(t[3]),sadAction=mixer.clipAction(t[4]),shyAction=mixer.clipAction(t[5]),talkAction=mixer.clipAction(t[6]),proposeAction=mixer.clipAction(t[7]),walkAction=mixer.clipAction(t[8]),danceAction=mixer.clipAction(t[9]),runAction=mixer.clipAction(t[10]),idleAction=mixer.clipAction(t[11]),actions=[idleAction,walkAction,runAction,angryAction,fearAction,greetAction,laughAction,sadAction,shyAction,talkAction,proposeAction,danceAction],activateAllActions(),animate()}),s.load("./animat3d_objects/scenes/ruins.a3d",function(e){world=e.scene,scene.add(world),world.traverse(function(e){e.isMesh&&(e.castShadow=!0,e.receiveShadow=!0,e.material.transparency=!0,e.material.opacity=1)}),world.position.x=0,world.position.y=-16.2,world.position.z=300,world.rotation.x=0,world.rotation.y=180*degree,world.rotation.z=0}),e.debug&&((gizmo=new THREE.AxesHelper(10)).position.set(-33,.2,0),scene.add(gizmo),helper=new THREE.CameraHelper(n.shadow.camera),scene.add(helper)),(renderer=new THREE.WebGLRenderer({antialias:!0})).setPixelRatio(window.devicePixelRatio),renderer.setSize(window.innerWidth,window.innerHeight),renderer.outputEncoding=THREE.sRGBEncoding,renderer.shadowMap.type=THREE.PCFSoftShadowMap,renderer.shadowMap.enabled=!0,t.appendChild(renderer.domElement),(stats1=new Stats).showPanel(0),stats1.domElement.style.cssText="position:absolute;bottom:100px;right:0px;padding-right:2%;",document.body.appendChild(stats1.domElement),(stats2=new Stats).showPanel(1),stats2.domElement.style.cssText="position:absolute;bottom:100px;right:80px;padding-right:2%;",document.body.appendChild(stats2.domElement),(stats3=new Stats).showPanel(2),stats3.domElement.style.cssText="position:absolute;bottom:100px;right:160px;padding-right:2%;",document.body.appendChild(stats3.domElement),t.appendChild(stats1.domElement),t.appendChild(stats2.domElement),t.appendChild(stats3.domElement),window.addEventListener("resize",onWindowResize)}function createPanel(){const e=new GUI({width:310,title:"Animat3D - ..a project by VALKYTEQ"});e.domElement.style.cssText="position:absolute;top:85px;right:2%;";const t=e.addFolder("3D Web Engine Settings"),i=e.addFolder("Dynamic Water Control"),o=e.addFolder("Animation Activation"),n=e.addFolder("Animation Stepping"),s=e.addFolder("Animation Fading"),a=e.addFolder("Animation Weight"),d=e.addFolder("Animation Speed");t.add(settings,"show model").onChange(showModel),t.add(settings,"show scenery").onChange(showScenery),t.add(settings,"show skeleton").onChange(showSkeleton),t.add(settings,"show world gizmo").onChange(showGizmo),i.addColor(settings,"water color").onChange(function(e){water.material.uniforms.color.value.set(e)}),i.add(settings,"water scale",1,10).onChange(function(e){water.material.uniforms.config.value.w=e}),o.add(settings,"deactivate all"),o.add(settings,"activate all"),n.add(settings,"pause/continue"),n.add(settings,"make single step"),n.add(settings,"modify step size",.01,.1,.001),crossFadeControls.push(s.add(settings,"from walk to idle")),crossFadeControls.push(s.add(settings,"from idle to walk")),crossFadeControls.push(s.add(settings,"from walk to run")),crossFadeControls.push(s.add(settings,"from run to walk")),s.add(settings,"use default duration"),s.add(settings,"set custom duration",0,10,.01),a.add(settings,"modify angry weight",0,1,.01).listen().onChange(function(e){setWeight(angryAction,e)}),a.add(settings,"modify dance weight",0,1,.01).listen().onChange(function(e){setWeight(danceAction,e)}),a.add(settings,"modify fear weight",0,1,.01).listen().onChange(function(e){setWeight(fearAction,e)}),a.add(settings,"modify greet weight",0,1,.01).listen().onChange(function(e){setWeight(greetAction,e)}),a.add(settings,"modify idle weight",0,1,.01).listen().onChange(function(e){setWeight(idleAction,e)}),a.add(settings,"modify laugh weight",0,1,.01).listen().onChange(function(e){setWeight(laughAction,e)}),a.add(settings,"modify propose weight",0,1,.01).listen().onChange(function(e){setWeight(proposeAction,e)}),a.add(settings,"modify run weight",0,1,.01).listen().onChange(function(e){setWeight(runAction,e)}),a.add(settings,"modify sad weight",0,1,.01).listen().onChange(function(e){setWeight(sadAction,e)}),a.add(settings,"modify shy weight",0,1,.01).listen().onChange(function(e){setWeight(shyAction,e)}),a.add(settings,"modify talk weight",0,1,.01).listen().onChange(function(e){setWeight(talkAction,e)}),a.add(settings,"modify walk weight",0,1,.01).listen().onChange(function(e){setWeight(walkAction,e)}),d.add(settings,"modify time scale",0,1.5,.01).onChange(modifyTimeScale),t.open(),i.close(),o.close(),n.close(),s.open(),a.close(),d.close()}function showModel(e){model.visible=e}function showScenery(e){world.visible=e,water.visible=e}function showSkeleton(e){skeleton.visible=e}function showGizmo(e){gizmo.visible=e,helper.visible=e}function modifyTimeScale(e){mixer.timeScale=e}function deactivateAllActions(){actions.forEach(function(e){e.stop()})}function activateAllActions(){setWeight(idleAction,settings["modify idle weight"]),setWeight(walkAction,settings["modify walk weight"]),setWeight(runAction,settings["modify run weight"]),setWeight(angryAction,settings["modify angry weight"]),setWeight(fearAction,settings["modify fear weight"]),setWeight(greetAction,settings["modify greet weight"]),setWeight(laughAction,settings["modify laugh weight"]),setWeight(sadAction,settings["modify sad weight"]),setWeight(shyAction,settings["modify shy weight"]),setWeight(talkAction,settings["modify talk weight"]),setWeight(proposeAction,settings["modify propose weight"]),setWeight(danceAction,settings["modify dance weight"]),actions.forEach(function(e){e.play()})}function pauseContinue(){singleStepMode?(singleStepMode=!1,unPauseAllActions()):idleAction.paused?unPauseAllActions():pauseAllActions()}function pauseAllActions(){actions.forEach(function(e){e.paused=!0})}function unPauseAllActions(){actions.forEach(function(e){e.paused=!1})}function toSingleStepMode(){unPauseAllActions(),singleStepMode=!0,sizeOfNextStep=settings["modify step size"]}function prepareCrossFade(e,t,i){const o=setCrossFadeDuration(i);singleStepMode=!1,unPauseAllActions(),e===idleAction?executeCrossFade(e,t,o):synchronizeCrossFade(e,t,o)}function setCrossFadeDuration(e){return settings["use default duration"]?e:settings["set custom duration"]}function synchronizeCrossFade(e,t,i){mixer.addEventListener("loop",function o(n){n.action===e&&(mixer.removeEventListener("loop",o),executeCrossFade(e,t,i))})}function executeCrossFade(e,t,i){setWeight(t,1),t.time=0,e.crossFadeTo(t,i,!0)}function setWeight(e,t){e.enabled=!0,e.setEffectiveTimeScale(1),e.setEffectiveWeight(t)}function updateWeightSliders(){settings["modify idle weight"]=idleWeight,settings["modify walk weight"]=walkWeight,settings["modify run weight"]=runWeight,settings["modify angry weight"]=angryWeight,settings["modify fear weight"]=fearWeight,settings["modify greet weight"]=greetWeight,settings["modify laugh weight"]=laughWeight,settings["modify sad weight"]=sadWeight,settings["modify shy weight"]=shyWeight,settings["modify talk weight"]=talkWeight,settings["modify propose weight"]=proposeWeight,settings["modify dance weight"]=danceWeight}function updateCrossFadeControls(){1===idleWeight&&0===walkWeight&&0===runWeight&&(crossFadeControls[0].disable(),crossFadeControls[1].enable(),crossFadeControls[2].disable(),crossFadeControls[3].disable()),0===idleWeight&&1===walkWeight&&0===runWeight&&(crossFadeControls[0].enable(),crossFadeControls[1].disable(),crossFadeControls[2].enable(),crossFadeControls[3].disable()),0===idleWeight&&0===walkWeight&&1===runWeight&&(crossFadeControls[0].disable(),crossFadeControls[1].disable(),crossFadeControls[2].disable(),crossFadeControls[3].enable())}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function animate(){requestAnimationFrame(animate),idleWeight=idleAction.getEffectiveWeight(),walkWeight=walkAction.getEffectiveWeight(),runWeight=runAction.getEffectiveWeight(),angryWeight=angryAction.getEffectiveWeight(),fearWeight=fearAction.getEffectiveWeight(),greetWeight=greetAction.getEffectiveWeight(),laughWeight=laughAction.getEffectiveWeight(),sadWeight=sadAction.getEffectiveWeight(),shyWeight=shyAction.getEffectiveWeight(),talkWeight=talkAction.getEffectiveWeight(),proposeWeight=proposeAction.getEffectiveWeight(),danceWeight=danceAction.getEffectiveWeight(),updateWeightSliders(),updateCrossFadeControls();let e=clock.getDelta();singleStepMode&&(e=sizeOfNextStep,sizeOfNextStep=0),mixer.update(e);for(let e of[stats1,stats2,stats3])e.update();renderer.render(scene,camera)}settings={"show model":!0,"show scenery":!0,"show skeleton":!1,"show world gizmo":!0,"deactivate all":deactivateAllActions,"activate all":activateAllActions,"pause/continue":pauseContinue,"make single step":toSingleStepMode,"modify step size":.05,"from walk to idle":function(){prepareCrossFade(walkAction,idleAction,1)},"from idle to walk":function(){prepareCrossFade(idleAction,walkAction,.5)},"from walk to run":function(){prepareCrossFade(walkAction,runAction,2.5)},"from run to walk":function(){prepareCrossFade(runAction,walkAction,5)},"use default duration":!0,"set custom duration":3.5,"modify idle weight":0,"modify walk weight":1,"modify run weight":0,"modify angry weight":0,"modify fear weight":0,"modify greet weight":0,"modify laugh weight":0,"modify sad weight":0,"modify shy weight":0,"modify talk weight":0,"modify propose weight":0,"modify dance weight":0,"modify time scale":1,"water color":"#b8bbfc","water scale":3,"water flowX":0,"water flowY":0},init({debug:!0,camera:{fov:35,near:1,far:1e4,position:[-77,22.5,-123],rotation:[0,200,0]},scene:{background:!1,bgcolor:10526880,fog:!1,fogcolor:10526880,fognear:30,fogfar:300},light:{shadow:!0,color:16777215,skycolor:16777215,groundcolor:4473924}});